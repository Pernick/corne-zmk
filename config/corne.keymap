#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#include "../zmk-nodefree-config/helper.h"

#define MAIN 0
#define LOWER 1
#define RAISE 2

#define XXX &none
#define ___ &trans

/* Global settings */

#define QUICK_TAP_MS 175

&sk {  // sticky-key config
    release-after-ms = <600>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
    ignore-modifiers;          // allow chording sticky mods & layers
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

/* Homerow mods */

#include "../zmk-nodefree-config/keypos_def/keypos_42keys.h"                // keyposition helpers
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
ZMK_BEHAVIOR(NAME, hold_tap, \
    flavor = "balanced"; \
    tapping-term-ms = <280>; \
    quick-tap-ms = <QUICK_TAP_MS>; \
    global-quick-tap-ms = <150>; \
    bindings = <HOLD>, <TAP>; \
    hold-trigger-key-positions = <TRIGGER_POS>; \
    hold-trigger-on-release; \
)
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs

ZMK_LAYER(main,
  &kp TAB &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P  &kp ESCAPE
  &kp ESCAPE &hml LSHFT A &hml LGUI S &hml LALT D &hml LCTRL F &kp G &kp H &hmr LCTRL J &hmr LALT K  &hmr LGUI L &hmr LSHFT SEMI &kp SQT
  &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp LALT
  &kp LGUI               &mo 1  &kp SPACE    &kp RET             &kp BSPC            &to 2
)

ZMK_LAYER(lower,
&trans  &kp EXCLAMATION        &kp AT      &kp HASH      &kp DLLR     &kp PRCNT         &kp CARET   &kp AMPS   &kp STAR  &kp LPAR           &kp RPAR  &kp BACKSLASH
&trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5         &kp MINUS  &kp EQUAL  &kp GRAVE  &kp LBKT  &kp RIGHT_BRACKET       &kp PIPE
&trans     &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &kp UNDERSCORE   &kp PLUS  &kp TILDE  &kp LBRC           &kp RBRC         &trans
                                             &trans        &trans        &trans            &trans     &trans     &trans
)

ZMK_LAYER(raise,
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5      &kp N6    &kp N7  &kp N8     &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &trans  &trans     &trans  &trans  &trans
                        &trans  &trans  &trans      &trans    &trans   &to 0
)
